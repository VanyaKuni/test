// Розминка 1 — Чіт/Нечіт
// Опис: є змінна n (ціле число). Вивести в консоль "парне", якщо n парне, і "непарне", якщо n непарне.
// Вимога: використати % і if/else.
// Приклад: n = 8 → вивід: парне
// Підказка: парне ⇔ n % 2 === 0. Можна виводити з template string: console.log(Число ${n} парне) або просто console.log("парне").

// Розминка 2 — Кратні трьом до N
// Опис: є змінна N (ціле, ≥ 1). Вивести в консоль усі числа від 1 до N, які діляться на 3 (кожне числo — на новому рядку). Якщо таких немає — вивести "нема кратних 3".
// Вимога: використати for або while та оператор %.
// Приклад: N = 10 → вивід:

// 3
// 6
// 9
// Підказка: в циклі, перевіряй, if (i % 3 === 0) console.log(i). Після циклу можна відстежувати, чи щось вивели (наприклад, прапорець found = true), щоб при відсутності вивести повідомлення.

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 1) Факторіал (через while)
// Опис: є змінна N (ціле число). Якщо N > 0 — обчислити факторіал N і вивести його. Якщо N <= 0 — вивести повідомлення про помилку.
// Вимоги: використовувати while. Результат вивести через console.log.
// Приклад: N = 5 → вивід 120
// Підказка: заведи акумулятор result = 1 і лічильник, поки лічильник ≤ N множиш result *= lічильник.

// 2) Зірки рядок за рядком (через while)
// Опис: є змінна M (ціле число ≥ 0). Потрібно вивести M рядків: 1-й рядок — *, 2-й — **, …, M-й — рядок з M зірочок. Якщо M <= 0 — вивести повідомлення про помилку.
// Вимоги: кожен рядок виводити окремим console.log і використовувати while.
// Приклад: M = 3 → вивід:

// *
// **
// ***
// Підказка: зберігай поточний рядок stars = "*", в циклі console.log(stars), потім роби stars += "*".

// 3) Піраміда в один console.log (через while)
// Опис: те саме, що і задача 2, але всі рядки потрібно зібрати в одну змінну pyramid з переносами "\n" і вивести одним console.log(pyramid). Якщо M <= 0 — повідомлення про помилку.
// Приклад: M = 3 → вивід одним console.log:

// *
// **
// ***
// Підказка: на кожній ітерації додавай до pyramid рядок і "\n", наприклад pyramid += stars + "\n"; не забувай оновлювати stars.

// 4) Оптимізований варіант (через for)
// Опис: реалізувати обидві попередні задачі, але використовуючи for-цикли:

// 4a) обчислення факторіалу N (вивід результату),

// 4b) побудова і вивід піраміди з M рядків (можна виводити по рядку або всією стрічкою).
// Вимоги: для факторіала використати for (let i = 2; i <= N; i++), для піраміди — або вкладений for, або зовнішній for і накопичення рядка. Обробити випадки N <= 0 або M <= 0.
// Приклад 4a: N = 4 → 24
// Приклад 4b: M = 4 →

// *
// **
// ***
// ****
// Підказка: for зручний для лічильника — задаєш початок, умову і крок в одному рядку.

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
let n = 3;
if (n % 2 === 0) {
  console.log(`число ${n} парне`);
} else {
  console.log(`число ${n} не парне`);
}
*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// let n = 200;
// let i = 1;
// if (n >= 3) {
//   while (i <= n) {
//     if (i % 3 === 0) {
//       console.log(i);
//     }
//     i++;
//   }
// } else console.log("n < 3");
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// for (i = 0; 5 < 10; i++) {
//   console.log(i);
// }
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// let n = 234;
// if (n >= 4) {
//   for (i = 0; i <= n; i++) {
//     if (i % 4 === 0) {
//       console.log(i);
//     }
//   }
// } else console.log("n < 4");
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// let n = 5;
// let res = 1;
// if (n > 0) {
//   for (i = 1; i <= n; i++) {
//     res *= i;
//   }
//   console.log(res);
// } else {
//   console.log("помилка");
// }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// let n = 50;
// let stars = "*";
// if (n > 0) {
//   for (i = 1; i <= n; i++) {
//     console.log(stars);
//     stars += "*";
//   }
// } else {
//   console.log("помилка");
// }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// let n = 50;
// let stars = "*";
// let i = 1;
// if (n > 0) {
//   while (i <= n) {
//     i++;
//     console.log(stars);
//     stars += "*";
//   }
// } else {
//   console.log("помилка");
// }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
